Domain-driven design (DDD) -- главенствующая нынче методология* проектирования архитектуры приложения.

Она использует предметную область, для которой разрабатывается программа, как основу архитектуры.

-- Строится Модель предметной области, на основе которой и создаются приложения.

-- Модель -- код, зависимости (сторонние пакеты и библиотеки, и др), документация, устное общение и пр.
-- Модель определяет единый язык, на котором общаются разработчики, эксперты, выражая естественным языком понятия, используемые и в программе, и в области. 

DDD отвечает на вопросы "Откуда брать все эти классы, сущности, каким способом улучшать архитектуру системы..."

То есть, девиз следующий: "Давайте не будем писать конкретное приложение, а будем создавать модель предметной области (в коде), а когда она будет достаточно хорошей для реализации конкретного приложения -- реализуем именно его из модели". Фактически, это позволяет не просто удовлетворять требованиям заказчика, а, проанализировав детально предметную область, даже предлагать ему новые и необходимые фичи и свойства, о которых он даже мог не догадываться.

*Методология проектирования архитектуры -- структурированный набор методов, отвечающий на вопрос КАК создавать архитектуру системы. Какие шаги нужно сделать, чтоб архитектуру создать.
