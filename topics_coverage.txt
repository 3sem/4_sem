
1. Введение, сложность разработки ПО
2. Декомпозиция и дизайн
2.1. Декомпозиция
2.2. ООП (Тут не расписывал, но, так или иначе, соответствует тому, что указано в программе. Курс, строго говоря, не по С++, но С++ в нём используется как инструмент для ООП... Следовательно, ЯП должен быть дан ровно до той степени, чтоб на нём можно было начать программировать (если до сих пор этого не произошло) в объектном стиле и знать основные свойства-подходы-сущности, как их использовать, отлаживать и поддерживать (также дам отдельные ООП-паттерны), всё остальное -- на усмотрение семинариста)
2.3. Требования (от сбора до трассировки)
2.4. Архитектурные шаблоны и стили
2.4.1. Об архитектуре в целом
2.4.2. Архитектурные шаблоны
2.4.3. Архитектурные стили
2.4.4. Архитектура распределенных приложений
3. Управление проектами
4. Инструменты процесса разработки
4.1. Версионирование
4.2. Управление дефектами и изменениями
4.3. Автоматизация сборки
4.4. Тестирование
4.5. Непрерывная интеграция
5. Обеспечение качества ПО
5.1. Программометрика, атрибуты качества
5.2. Повышение качества
5.2.1. Тестирование - 2
5.2.2. Рефакторинг
6. Документирование и сопровождение
6.1. Виды
6.2. Стандарты
6.3. UML * (наверняка выкинем)
6.4. Автоматизация (doxygen , etc)
7. Комплексные средства управления разработкой ПО * (скорее всего не успеем)
